name: Terraform + Build + Deploy (Tomcat WAR)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  infra:
    runs-on: ubuntu-latest
    env:
      TF_IN_AUTOMATION: "true"
    steps:
      - uses: actions/checkout@v4

      # Login to Azure using OIDC (no secrets)
      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply (provision RG/Plan/Web App)
        env:
          TF_VAR_subscription_id: ${{ vars.AZURE_SUBSCRIPTION_ID }}
          TF_VAR_tenant_id:       ${{ vars.AZURE_TENANT_ID }}
          TF_VAR_client_id:       ${{ vars.AZURE_CLIENT_ID }}
          TF_VAR_rg_name:         rg-tomcat-demo
          TF_VAR_plan_name:       asp-tomcat-demo
          TF_VAR_plan_sku:        B1
          TF_VAR_location:        eastus
          TF_VAR_app_name:        tomcat-demo-${{ github.repository_owner }}-${{ github.run_number }}
        run: terraform apply -auto-approve

      - name: Capture TF outputs
        id: tfout
        run: |
          echo "APP=$(terraform output -raw app_name)" >> $GITHUB_OUTPUT
          echo "RG=$(terraform output -raw resource_grp)" >> $GITHUB_OUTPUT
          echo "URL=$(terraform output -raw web_url)" >> $GITHUB_OUTPUT

      - name: Export for next jobs
        run: |
          echo "APP_NAME=${{ steps.tfout.outputs.APP }}" >> $GITHUB_ENV
          echo "RG_NAME=${{ steps.tfout.outputs.RG }}" >> $GITHUB_ENV
          echo "WEB_URL=${{ steps.tfout.outputs.URL }}" >> $GITHUB_ENV

  build:
    runs-on: ubuntu-latest
    needs: infra
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven
      - name: Build with Maven
        run: mvn -B -DskipTests package --file pom.xml
      - name: Upload WAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: devops-tomcat-demo
          path: target/*.war
          if-no-files-found: error

  deploy:
    runs-on: ubuntu-latest
    needs: [infra, build]
    steps:
      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - uses: actions/download-artifact@v4
        with:
          name: devops-tomcat-demo

      - name: Deploy WAR to Web App
        run: |
          WAR=$(ls *.war | head -n1)
          echo "Deploying $WAR to app: $APP_NAME in RG: $RG_NAME"
          az webapp deploy \
            --resource-group "$RG_NAME" \
            --name "$APP_NAME" \
            --src-path "$WAR" \
            --type war \
            --async false
      - name: Show URL
        run: echo "App URL: $WEB_URL"
